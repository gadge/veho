"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class Vec{static ini(t,r=(t=>0)){return Array.from({length:t},(t,e)=>r(e))}static iniMap(t,r){return new Map([t,r].transpose())}static zip(t,...r){const[e,n]=[r[0].length,r.length],o=new Array(e);for(let s=0;s<e;s++){const e=new Array(n);for(let t=0;t<n;t++)e[t]=r[t][s];o[s]=t(e)}return o}static progression(t,r,e){switch(t){case 0:return[];case 1:return[r];default:const n=new Array(t);n[0]=r;for(let r=1;r<t;r++)n[r]=e(n[r-1]);return n}}static arithmetic(t,r,e){return Vec.progression(t,r,t=>t+e)}static geometric(t,r,e){return Vec.progression(t,r,t=>t*e)}static randSample(t){return t[~~(Math.random()*t.length)]}}Array.prototype.last=function(){return this[this.length-1]},Array.prototype.take=function(t){let r=new Array(t);if(t>0&&t<this.length)for(let e=0;e<t;e++)r[e]=this[e];else r=this;return r},Array.prototype.zip=function(t,r){const e=new Array(this.length);for(let n=0;n<this.length;n++)e[n]=r(this[n],t[n],n);return e},Array.prototype.multiZip=function(t){const[r,e]=[this[0].length,this.length],n=new Array(r);for(let o=0;o<r;o++){const r=new Array(e);for(let t=0;t<e;t++)r[t]=this[t][o];n[o]=t(...r)}return n};class JExt{static jsonToMap(t){return new Map(Object.entries(t))}static mapToJson(t){return{...[...t.entries()]}}static jsonArrayToMatrix(t){return[...t.map(t=>Object.values(t))]}static matrixToJsonArray(t,r,e){const n=t.map(t=>e.zip(t,(t,r)=>[t,r])),o=r.zip(n,(t,r)=>[t,r]);let s={};for(let[t,r]of o)s[t]=r;return s}}class Mat{static ini(t,r,e=((t,r)=>0)){return Array.from({length:t},(t,n)=>Array.from({length:r},(t,r)=>e(n,r)))}}Array.prototype.xB=function(){return this.length-1},Array.prototype.yB=function(){return this[0].length-1},Array.prototype.row=function(t){return this[t]},Array.prototype.col=function(t){return this.map(r=>r[t])},Array.prototype.transpose=function(){return Object.keys(this[0]).map(t=>this.map(r=>r[t]))},Array.prototype.veho=function(t){return this.map(r=>r.map(t))},Array.prototype.vehoCol=function(t){return this.transpose().map(t)},exports.JExt=JExt,exports.Mat=Mat,exports.Vec=Vec;
